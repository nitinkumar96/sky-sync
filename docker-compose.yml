version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  booking-service:
    build:
      context: ./backend/booking-service
      dockerfile: Dockerfile
    ports:
      - "3012:3012"
    env_file:
      - ./backend/booking-service/.env
    depends_on:
      - kafka

  flight-service:
    build:
      context: ./backend/flight-service
      dockerfile: Dockerfile
    ports:
      - "3011:3011"
    env_file:
      - ./backend/flight-service/.env
    depends_on:
      - kafka

  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - ./backend/api-gateway/.env
    depends_on:
      - booking-service
      - flight-service

  kafka-consumer:
    build:
      context: ./backend/kafka-consumer
      dockerfile: Dockerfile
    env_file:
      - ./backend/kafka-consumer/.env
    depends_on:
      - kafka

  dashboard-service:
    build:
      context: ./backend/services/dashboard-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    env_file:
      - ./backend/services/dashboard-service/.env
    depends_on:
      - api-gateway

  notification-service:
    build:
      context: ./backend/services/notification-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    env_file:
      - ./backend/services/notification-service/.env
    depends_on:
      - api-gateway

volumes:
  postgres-booking-data:
  postgres-flight-data:
  postgres-skysync-data: